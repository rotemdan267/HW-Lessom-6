using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace HW_Lessom_6
{
    class Program
    {
        static void Main(string[] args)
        {
            #region Q1

            // מהו תכנות מונחה עצמים?

            // פרידגמת תכנות (שיטה בתכנות) המבקשת להסתכל על תוכנית
            // כמו שאנו מסתכלים על העולם האמיתי, ובעצם לחלק את התכנית שלנו
            // לעצמים, אובייקטים, באותה צורה שאנו, כבני אדם, מסתכלים על העולם.
            // במקום שהתכנית תהיה "גוש" אחד גדול, היא תתחלק לחלקים נפרדים שלא תלויים
            // אחד בשני, כשלכל אחד מהם יש את התפקיד שלו, ויחד הם מתממשקים להיות תכנית אחת.

            #endregion

            #region Q2

            // האם שפת C היא שפה מונחית עצמים? האם ++C?

            // שפת C - לא
            // C++ - כן

            #endregion

            #region Q3

            // מהי ירושה? ומה מרוויחים מירושה?

            // בעולם האמיתי אנחנו מחלקים את הדברים שאנחנו מכירים לקטגוריות
            // שונות,  בעלות מכנה משותף
            // לדוגמא: אריה, ג'ירפה, וזברה - כולם בעלי חיים, אע"פ שכל אחד מהם שונה
            // עקרון ה"ירושה" בתכנות מונחה עצמים היא גישה שאומרת שבעצם אנחנו רוצים לקחת את
            // האובייקטים השונים ולחלק אותם לקטגוריות בעלות מכנה משותף, ממש כמו בעולם האמיתי
            // אם נצמד לדוגמא, אז אריה, ג'ירפה וזברה הם האובייקטים שלנו, נכניס את כולם
            // תחת הקטגוריה "בעל חיים" ונגדיר מאפיינים ופעילויות ל"בעל חיים", לדוגמא
            // היכולת ללכת, לאכול, צורך לנשום וכו'
            // לאחר שהגדרנו את "אריה" תחת הקטגוריה "בעל חיים" הוא "יירש" 
            // את המאפיינים והפעילויות שהגדרנו ל"בעל חיים"

            // מעקרון הירושה אנו מרוויחים חסכון בכתיבת קוד, במקום להגדיר מאפיינים
            // ופעילויות דומות מס' פעמים עבור כל אובייקט בנפרד, עושים זאת פעם אחת
            // ומגדירים את כל האובייקטים השייכים תחת אותה קטגוריה.
            // בנוסף, כשנצטרך לבצע שינוי בפעולה/מאפיין, נוכל לבצע את השינוי פעם
            // אחת וזה יתפוס עבור כל האובייקטים בואתה קבוצה
            // בנוסף, עבודה בצורה כזאת היא אינסטינקטיבית, ברורה ונוחה 
            // לנו יותר, כי זו הצורה שאנו רגילים לחשוב בה גם בחיים האמיתיים
            // וכך התכנית יוצאת ברורה ונוחה יותר לכתיבה, עבודה ותחזוק, גם עבורנו
            // וגם עבור מי שיבוא אחרינו

            #endregion

            #region Q4

            // תן 2 דוגמאות מהעולם האמיתי שבו המערכת עוברת הכמסה
            // (Encapsulation)
            // ומחצינה החוצה יכולות ספציפיות( מהעולם האמיתי).

            // נגן מוזיקה שפועל במצב "shuffle"
            // מאחורי הקלעים הוא מצמיד מספר לכל אחד מהשירים ברשימה
            // יוצר משתנה Random
            // ו"מגריל" מספר, ולפי המספר משמיע לי את השיר שיצא
            // (או לפחות תהליך דומה לזה)
            // אך אני בתור משתמש בסך הכל מקבל שיר "רנדומלי" מתוך הרשימה שלי.

            // בעלייה לאוטובוס, אני בסך הכל מצמיד את ה"רב-קו" למקום המיועד
            // והמערכת יודעת לקרוא ולזהות את הרב קו הפרטי שלי, לגשת אל
            // החשבון שלי, לבדוק האם צריך לחייב אותי, או שאולי כבר חויבתי בשעה וחצי
            // האחרונה. במידה ואכן אני צריך לשלם, היא יודעת לחייב אותי בסכום הנכון
            // ולעדכן את מצב החשבון שלי בסכום המתאים

            #endregion

            #region Q5

            //תן 3 דוגמאות לירושה
            //(Inheritance)
            //בין עצמים (מהעולם האמיתי).

            // 1) בבית ספר מלמדים כמה וכמה "מקצועות" - ספרות, כימיה, מתמטיקה
            // כל מקצוע מלומד ע"י מורה אחר, נלמד בכיתות שונות, עבור כל אחד מהם
            // יש מס' תלמידים שלומד וציון ממוצע של כל התלמידים.
            // כל המאפיינים הללו שייכים לכל "מקצוע" וברגע שנגדיר את "כימיה" תחת
            // "מקצוע" אני יכול למלא עבורו את כל המשתנים האלו

            // "מכשירי חשמל"
            // מיקרוגל, תנור, בלנדר, מחשב, קונסולת פלייסטיישן
            // כולם מכשירים חשמליים, דורשים חיבור לחשמל
            // וצריכים דרך כלשהי להפעיל/לכבות אותם

            // 2) מיקרוגל, תנור ובלנדר - אפשר להכניס תחת עוד קטגוריה - כלי בישול/מטבח
            // הם צריכים להיות בעלי מקום לקבל לתוכם אוכל ושם לבצע עליו את הפעולה שלהם
            // וכן כפתורים על מנת לתת למשתמש אפשרות לבחור איזה פעולה בדיוק לבצע

            // 3) לעומת זאת מחשב וקונסולה - יכולים להיכנס לקטגוריה מכשירי בידור.
            // הם לא צריכים לקבל לתוכם אוכל אבל כן צריכים
            // דרך להציג למשתמש את הפעולה שלהם (מסך) וכן דרך עבור המשתמש
            // "לתקשר" עם המכשיר ולהסביר לו מה הוא רוצה לעשות (מקלדת, שלט)

            #endregion

            #region Q6

            // הסבר למה רכב לא יורש מאוטובוס הרי שניהם כלי רכב.

            // "כלי רכב" יכיל את התכונות הבסיסיות השייכות לכל כלי הרכב
            // לדוגמא, צריך להכיל מנוע
            // צורך דלק כלשהו
            // בעל יכולת לנסוע
            // ולכן כל כלי רכב יכול לרשת תכונות אלה והן יתאימו לו

            // לעומת זאת, אוטובוס מכיל תכונות שאופייניות לו, אך לא שייכות לרכב
            // רגיל, כגון האפשרות להכיל 50 נוסעים
            // תעריף לנסיעה בו...
            // ומכיוון שתכונות אלו לא שייכות לרכב, אין סיבה שהוא יירש אותם

            #endregion

            #region Q7

            // תן דוגמה ליכולת אחת שיכולה להיות בכמה מחלקות עם אבא משותף
            // (PolyMorphism)
            // (מהעולם האמיתי)


            // תנור ומיקורגל - שניהם מבצעים פעולה שנקראת "חימום אוכל"
            // אך כל אחד מהם מבצע אותה בצורה שונה
            // תנור מכיל גוף חימום, שמתחמם ומגיע לטמפרטורה מאוד גבוהה
            // ומחמם את החלל של התנור וכך החום מגיע למאכל, הנמצא באותו חלל
            // לעומת זאת מיקרוגל לא מכיל שום גוף חימום, אלא מפזר קרינת מיקרו
            // שנבלעת במאכל, בעיקר במים, שמצויים ברוב המאכלים, וגורמת
            // לתנועה מרובה במולקולות של המים, מחמת השדה החשמלי שנמצא בקרינה
            // ומשפיע על המולקולות, בעלות מטען חשמלי בעצמן. התנועה של המולקולות
            // יוצרת חום וכך המאכל מתחמם.

            #endregion

            #region Q8

            // תן 2 דוגמאות לרשימת עצמים עם אבא משותף מהעולם האמיתי
            // (לדוגמה(לא להעתיק (: ) אריה, חמור ושור. שלושתם סוג של חיה)


            // ברזל, נחושת וזהב - כולן מתכות, בעלות יכולות משותפות
            // מוליכות חשמל בצורה טובה
            // מוליכות חום בצורה טובה
            // במצב מוצק, מאוד קשיחות ומסודרות בטמפרטורת החדר, ניתן
            // לעצב אותן לצורה מסוימת ע"י התכה, והן ישמרו עליה לאחר שיתקררו

            // קולה, יין, מיץ ענבים - משקאות
            // כולם נוזלים
            // בעלי טעם דומיננטי, בד"כ מתוק, בד"כ כזה שרוב בני העולם מסכימים
            // שהוא טעים.



            #endregion


        }
    }
}
